{"version":3,"file":"editor.js","mappings":";;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACxDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACPA;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://blog-project/./client-src/javascripts/ui/modal.js","webpack://blog-project/./client-src/javascripts/utils/fetch.js","webpack://blog-project/webpack/bootstrap","webpack://blog-project/webpack/runtime/define property getters","webpack://blog-project/webpack/runtime/hasOwnProperty shorthand","webpack://blog-project/webpack/runtime/make namespace object","webpack://blog-project/./client-src/javascripts/components/ckeditor/index.js"],"sourcesContent":["export default function modal() {\r\n  const backdrop = document.querySelector('.backdrop');\r\n  const modalWindow = document.querySelector('.modal');\r\n  const modalCloseBtn = modalWindow.querySelector('.modal__close');\r\n  const modalContent = modalWindow.querySelector('.modal__content');\r\n  const cancelBtn = modalWindow.querySelector('#cancel');\r\n\r\n  const modalShow = (content) => {\r\n    const mobileMenu = document.querySelector('.navigation__list');\r\n\r\n    if (mobileMenu && mobileMenu.classList.contains('active')) {\r\n      mobileMenu.classList.remove('active');\r\n      backdrop.classList.remove('show-flex');\r\n    }\r\n\r\n    if (modalWindow && modalWindow.classList.contains('show')) {\r\n      modalWindow.classList.remove('show');\r\n      backdrop.classList.remove('show-flex', 'full');\r\n    }\r\n\r\n    backdrop.classList.add('show-flex');\r\n    backdrop.classList.add('full');\r\n    modalWindow.classList.add('show');\r\n    modalWindow.focus();\r\n    if (document.body.style.overflow === 'hidden') {\r\n      document.body.style.overflow = '';\r\n    } else {\r\n      document.body.style.overflow = 'hidden';\r\n    }\r\n\r\n    modalContent.innerHTML = content;\r\n  };\r\n\r\n  const modalClose = () => {\r\n    modalWindow.classList.remove('show');\r\n    backdrop.classList.remove('show-flex', 'full');\r\n    document.body.style.overflow = '';\r\n  };\r\n\r\n  if (backdrop) {\r\n    backdrop.addEventListener('click', (event) => {\r\n      modalClose();\r\n    });\r\n  }\r\n\r\n  modalCloseBtn.addEventListener('click', (event) => {\r\n    modalClose();\r\n  });\r\n\r\n  if (cancelBtn) {\r\n    cancelBtn.addEventListener('click', (event) => {\r\n      closeModal();\r\n    });\r\n  }\r\n\r\n  return [modalShow, modalClose, modalWindow];\r\n}\r\n","const token = document\r\n  .querySelector('meta[name=\"csrf-token\"]')\r\n  .getAttribute('content');\r\n\r\nexport async function getData(url) {\r\n  const res = await fetch(url);\r\n  const result = await res.json()\r\n  if (!res.ok) {\r\n    throw new Error(result.message || 'Something went wrong')\r\n  }\r\n  return result;\r\n}\r\n\r\nexport async function postData(url, data, contentType) {\r\n  let res = await fetch(url, {\r\n    method: 'POST',\r\n    headers: {\r\n      'CSRF-Token': token,\r\n      'Content-Type': contentType || 'application/json',\r\n    },\r\n    body: contentType ? data : JSON.stringify(data),\r\n  });\r\n\r\n  const result = await res.json();\r\n\r\n  if (!res.ok) {\r\n    throw new Error(result.message || 'Something went wrong');\r\n  }\r\n\r\n  return result;\r\n}\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { postData, getData } from '../../utils/fetch.js';\r\nimport modal from '../../ui/modal.js';\r\nconst [modalShow, modalClose] = modal();\r\n\r\nasync function saveData(\r\n  editor,\r\n  inputs,\r\n  postStatus,\r\n  postId,\r\n  actionButtons,\r\n  event\r\n) {\r\n  const pressedButton = event.currentTarget;\r\n  if (event) {\r\n    pressedButton.disabled = true;\r\n  }\r\n\r\n  const [title, category, tags, slug] = inputs;\r\n\r\n  const contentValue = editor.getData();\r\n\r\n  const titleValue = title.value;\r\n  const categoryValue = category.value;\r\n  const tagsValue = tags.value;\r\n  const slugValue = slug.value;\r\n\r\n  const data = {\r\n    content: contentValue,\r\n    title: titleValue,\r\n    category: categoryValue,\r\n    tags: tagsValue,\r\n    slug: slugValue,\r\n    postId: postId,\r\n    postStatus: postStatus,\r\n  };\r\n\r\n  try {\r\n    const response = await postData('/add-post', data);\r\n    if (postStatus && postStatus === 'published') {\r\n      const [saveButton, publishButton] = actionButtons;\r\n\r\n      saveButton && saveButton.remove();\r\n      publishButton.textContent = 'update';\r\n    }\r\n\r\n    window.history.pushState({}, 'Article', `?id=${response.postId}`);\r\n  } catch (error) {\r\n    pressedButton.disabled = false;\r\n    modalShow(error.message);\r\n  }\r\n}\r\n\r\nasync function getPreviousContent(editor, postId) {\r\n  try {\r\n    const response = await getData(`/post-edit/${postId}`);\r\n    editor.setData(response.content);\r\n  } catch (error) {\r\n    modalShow(error.message);\r\n  }\r\n}\r\n\r\nfunction changeHandler(editor, inputs, actionButtons) {\r\n  const activeActionButtons = () => {\r\n    actionButtons.forEach((btn) => {\r\n      if (btn) {\r\n        btn.disabled = false;\r\n      }\r\n    });\r\n  };\r\n\r\n  editor.model.document.on('change:data', (evt, data) => {\r\n    activeActionButtons();\r\n  });\r\n\r\n  inputs.forEach((input) => {\r\n    input.addEventListener('input', activeActionButtons);\r\n  });\r\n}\r\n\r\nfunction initCKEditor() {\r\n  const titlePlaceholder = 'Type your title';\r\n  const contentPlaceholder = 'Type your content';\r\n\r\n  const saveButton = document.getElementById('save');\r\n  const publishButton = document.getElementById('publish');\r\n  const token = document\r\n    .querySelector('meta[name=\"csrf-token\"]')\r\n    .getAttribute('content');\r\n  const postId = document.querySelector('input[name=\"postId\"]').value;\r\n  const categoryId = document.querySelector('input[name=\"categoryId\"]').value;\r\n\r\n  const title = document.getElementById('article-title');\r\n  const category = document.getElementById('article-category');\r\n  const tags = document.getElementById('article-tags');\r\n  const slug = document.getElementById('article-slug');\r\n\r\n  title.placeholder = titlePlaceholder;\r\n  BalloonBlockEditor.create(document.querySelector('#editor'), {\r\n    licenseKey: '',\r\n    simpleUpload: {\r\n      uploadUrl: '/editor-upload-image',\r\n\r\n      // Enable the XMLHttpRequest.withCredentials property.\r\n      withCredentials: true,\r\n\r\n      // Headers sent along with the XMLHttpRequest to the upload server.\r\n      headers: {\r\n        'CSRF-Token': token,\r\n      },\r\n    },\r\n    placeholder: contentPlaceholder,\r\n  })\r\n    .then(async (editor) => {\r\n      window.editor = editor;\r\n\r\n      postId && (await getPreviousContent(editor, postId));\r\n\r\n      const inputs = [title, category, tags, slug];\r\n      const actionButtons = [saveButton, publishButton];\r\n      changeHandler(editor, inputs, actionButtons);\r\n\r\n      publishButton.addEventListener('click', async (event) => {\r\n        saveData(editor, inputs, 'published', postId, actionButtons, event);\r\n      });\r\n    })\r\n    .catch((error) => {\r\n      console.error(error);\r\n    });\r\n}\r\n\r\nfunction openArticleMobileMenu() {\r\n  const optionsMenuBtn = document.getElementById('mobile-article-options');\r\n  const optionsMenu = document.querySelector('.article-edit__control-area');\r\n\r\n  optionsMenuBtn.addEventListener('click', (event) => {\r\n    event.stopPropagation();\r\n\r\n    optionsMenu.classList.toggle('active');\r\n  });\r\n\r\n  window.addEventListener('click', (event) => {\r\n    event.stopPropagation();\r\n    if (!event.target.matches('.article-edit__control-area') && !event.target.matches('.article-edit__control-area > *')) {\r\n      if (optionsMenu.classList.contains('active')) {\r\n\r\n        optionsMenu.classList.remove('active');\r\n      }\r\n    }\r\n  });\r\n}\r\nopenArticleMobileMenu();\r\ninitCKEditor();\r\n"],"names":[],"sourceRoot":""}